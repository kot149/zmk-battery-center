name: "Tauri Build & Release"

on:
  workflow_dispatch:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  # create-release:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: get-version-from-package-json
  #       id: get_version
  #       run: echo "version=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

  #     - name: Create Release
  #       run: |
  #         gh release create v${{steps.get_version.outputs.version}} --generate-notes --draft --prerelease
  #       env:
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  build-and-release-tauri:
    strategy:
      fail-fast: true
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          # - platform: "macos-latest"
          #   args: "--target universal-apple-darwin"
          # - platform: "ubuntu-22.04"
          #   args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: bun install --frozen-lockfile

      - name: Restore bun cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      # If tagName and releaseId are omitted tauri-action will only build the app and won't try to upload any assets.
      - uses: tauri-apps/tauri-action@v0
        id: tauri
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'v__VERSION__'
          releaseDraft: true
          prerelease: true
          args: ${{ matrix.args }}
